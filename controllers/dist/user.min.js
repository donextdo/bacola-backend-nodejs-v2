"use strict";function ownKeys(r,e){var t=Object.keys(r);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(r);e&&(s=s.filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable})),t.push.apply(t,s)}return t}function _objectSpread(r){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?ownKeys(t,!0).forEach(function(e){_defineProperty(r,e,t[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(r,Object.getOwnPropertyDescriptors(t)):ownKeys(t).forEach(function(e){Object.defineProperty(r,e,Object.getOwnPropertyDescriptor(t,e))})}return r}function _defineProperty(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}var bcrypt=require("bcryptjs"),_require=require("express"),request=_require.request,User=require("../models/user"),auth=require("../middlewares/jwt"),register=function(r,t){var s,n,a,u,c,i,o;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return s=r.body.userName,n=r.body.email,a=r.body.password,u=r.body.isFavourite,c=bcrypt.genSaltSync(10),i=bcrypt.hashSync(a,c),o=new User({userName:s,email:n,password:i,isFavourite:u}),e.prev=7,e.next=10,regeneratorRuntime.awrap(User.findOne({email:n}));case 10:if(!e.sent){e.next=15;break}t.status(400).send({message:"User Already Exists"}),e.next=23;break;case 15:return e.next=17,regeneratorRuntime.awrap(o.save());case 17:if(e.sent)return e.abrupt("return",t.status(201).send({message:"New User registered"}));e.next=22;break;case 22:return e.abrupt("return",t.status(500).send({message:"Internal server error"}));case 23:e.next=29;break;case 25:return e.prev=25,e.t0=e.catch(7),console.log(e.t0),e.abrupt("return",t.status(400).send({message:"Error while registering a user"}));case 29:case"end":return e.stop()}},null,null,[[7,25]])},login=function(r,t){var s,n,a,u;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return s=r.body.email,n=r.body.password,e.prev=2,e.next=5,regeneratorRuntime.awrap(User.findOne({email:s}));case 5:if(!(a=e.sent)){e.next=15;break}if(a&&bcrypt.compareSync(n,a.password))return u=auth.generateAccessToken(s),e.abrupt("return",t.status(200).send(_objectSpread({},a.toJSON(),{token:u})));e.next=12;break;case 12:return e.abrupt("return",t.status(400).send({message:"Such user does not exist check your credentials "}));case 13:e.next=16;break;case 15:return e.abrupt("return",t.status(404).send({message:"Such user does not exist"}));case 16:e.next=21;break;case 18:return e.prev=18,e.t0=e.catch(2),e.abrupt("return",t.status(400).send({message:"Such user does not exist check your credentials"}));case 21:case"end":return e.stop()}},null,null,[[2,18]])},getAllUsers=function(e,r){var t;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,regeneratorRuntime.awrap(User.find());case 3:if(t=e.sent)return e.abrupt("return",r.json(t));e.next=8;break;case 8:return e.abrupt("return",r.status(404).send({message:"Error on retrieving users"}));case 9:e.next=14;break;case 11:return e.prev=11,e.t0=e.catch(0),e.abrupt("return",r.status(500).send({message:"Internal server error"}));case 14:case"end":return e.stop()}},null,null,[[0,11]])},getOneUser=function(r,t){var s,n;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return s=r.params.email,e.prev=1,e.next=4,regeneratorRuntime.awrap(User.findOne({email:s}));case 4:if(n=e.sent)return e.abrupt("return",t.json(n));e.next=9;break;case 9:return e.abrupt("return",t.status(404).send({message:"No such user found"}));case 10:e.next=15;break;case 12:return e.prev=12,e.t0=e.catch(1),e.abrupt("return",t.status(500).send({message:"Internal Server Error"}));case 15:case"end":return e.stop()}},null,null,[[1,12]])},updateUserPassword=function(r,t){var s,n,a,u,c,i;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return s=r.params.email,n=r.params.pwd,e.prev=2,e.next=5,regeneratorRuntime.awrap(User.findOne({email:s}));case 5:if(a=e.sent)return u=bcrypt.genSaltSync(10),c=bcrypt.hashSync(n,u),i={userName:a.userName,email:a.email,password:c,isFavourite:a.isFavourite},e.prev=10,e.next=13,regeneratorRuntime.awrap(User.findOneAndUpdate({email:s},i));e.next=26;break;case 13:if(e.sent)return e.abrupt("return",t.status(200).send({message:"Successfully updated Password"}));e.next=18;break;case 18:return e.abrupt("return",t.status(500).send({message:"Internal server error"}));case 19:e.next=24;break;case 21:return e.prev=21,e.t0=e.catch(10),e.abrupt("return",t.status(400).send({message:"Unable to update recheck your email"}));case 24:e.next=27;break;case 26:return e.abrupt("return",t.status(404).send({message:"No such user with entered email"}));case 27:e.next=32;break;case 29:return e.prev=29,e.t1=e.catch(2),e.abrupt("return",t.status(404).send({message:"No such user with entered email"}));case 32:case"end":return e.stop()}},null,null,[[2,29],[10,21]])},updateUser=function(r,t){var s,n,a,u;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return s=r.params.email,e.next=3,regeneratorRuntime.awrap(User.findOne({email:s}));case 3:return n=e.sent,a=n.password,u={userName:r.body.userName,email:r.body.email,password:a,isFavourite:r.body.isFavourite},e.prev=6,e.next=9,regeneratorRuntime.awrap(User.findOneAndUpdate({email:s},u));case 9:if(e.sent)return e.abrupt("return",t.status(200).send({message:"Successfully updated User Details"}));e.next=14;break;case 14:return e.abrupt("return",t.status(500).send({message:"Internal server error"}));case 15:e.next=20;break;case 17:return e.prev=17,e.t0=e.catch(6),e.abrupt("return",t.status(400).send({message:"Unable to update recheck your email"}));case 20:case"end":return e.stop()}},null,null,[[6,17]])},updateBillingAddress=function(r,t){var s,n,a,u;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return s=r.params.email,e.next=3,regeneratorRuntime.awrap(User.findOne({email:s}));case 3:return n=e.sent,a=n.password,u={userName:r.body.userName,email:r.body.email,password:a,isFavourite:r.body.isFavourite,billingAddress:r.body.billingAddress},e.prev=6,e.next=9,regeneratorRuntime.awrap(User.findOneAndUpdate({email:s},u));case 9:if(e.sent)return e.abrupt("return",t.status(200).send({message:"Successfully updated User Details"}));e.next=14;break;case 14:return e.abrupt("return",t.status(500).send({message:"Internal server error"}));case 15:e.next=20;break;case 17:return e.prev=17,e.t0=e.catch(6),e.abrupt("return",t.status(400).send({message:"Unable to update recheck your email"}));case 20:case"end":return e.stop()}},null,null,[[6,17]])};module.exports={register:register,login:login,getAllUsers:getAllUsers,getOneUser:getOneUser,updateUserPassword:updateUserPassword,updateUser:updateUser,updateBillingAddress:updateBillingAddress};
//# sourceMappingURL=user.min.js.map
